// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Aqui dizemos quais tabaleas vao ter no nosso banco de dado. Suporta vários banco de dados. Precisa estar cm a extensao do prisma instadal.

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Habit {
  id            String          @id @default(uuid())
  title         String
  created_at    DateTime
  dayHabits     DayHabit[]
  weekDays HabitWeekDays[]

  @@map("habits")
}

//Relação de um para muitos. Cada habito pode ter estar disponivel em varios dias da semana 
model HabitWeekDays {
  id       String @id @default(uuid())
  habit_id String
  week_day Int

  habit   Habit  @relation(fields: [habit_id], references: [id])
  

  @@unique([habit_id, week_day]) // O mesmo habito só pode estar disponivel uma vez no mesnmo dia da semana. Nao faz sentido ter dois registro para o mesmo habito. 
}

// Guarda os dados do dia x
model Day {
  id   String   @id @default(uuid())
  date DateTime

  dayHabits DayHabit[]

  @@unique([date]) //Nao podem existir duas datas para o mesmo dia 
  @@map("day")
}

// Guarda os habitos criados para o dia x 
model DayHabit {
  id String @id @default(uuid())

  day_id   String
  habit_id String

  // Abaixo vamos referenciar as tabelas com chave estrangeira.Seleciona todo o arquivo, ctrl a e depois: ctrl + shift + p. Depois digita format document para preencher de forma automatica as relações de forma automatica

  day   Day   @relation(fields: [day_id], references: [id])
  habit Habit @relation(fields: [habit_id], references: [id])

  @@unique([day_id, habit_id])
  @@map("day_habits")
}
